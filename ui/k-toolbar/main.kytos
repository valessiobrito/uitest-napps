<template>
  <k-toolbar-item icon="paint-brush" tooltip="NApp UI Test">
    <k-accordion>
      <k-accordion-item title="Accordion item">
        <k-dropdown icon="circle-o" title="Dropdown" :options="get_options"
          :value.sync="source"></k-dropdown>
       <k-select icon="link" title="Select" :options="get_select"
        :value.sync ="desired_links"></k-select>
        <k-button icon="search" title="Search">
        </k-button>

      </k-accordion-item>
    </k-accordion>
    <k-accordion>
      <k-accordion-item title="Accordion item">
          <k-button-group>
            <k-button tooltip="Map Background" icon="globe"></k-button>
            <k-button tooltip="Image Background (disabled)" icon="photo" :is-disabled="true"></k-button>
            <k-button tooltip="No Background" icon="window-close-o"></k-button>
          </k-button-group>
          <k-slider icon="adjust" :initial-value="mapOpacity" :action="emitMapOpacity"></k-slider>
          <k-button-group>
            <k-button tooltip="Map Background" icon="globe" title="Map Background"></k-button>
            <k-button icon="search" title="Search"></k-button>
            <k-button title="Test no Icon"></k-button>
          </k-button-group>
          <k-button tooltip="Map Background" icon="globe" title="Map Background"></k-button>
          <k-button icon="search" title="Search"></k-button>
          <k-button title="Test no Icon"></k-button>
      </k-accordion-item>
    </k-accordion>

  </k-toolbar-item>

</template>

<script>
module.exports = {
  methods: {
    get_options (){
      var self = this
      $.ajax({
        async: true,
        dataType: "json",
        type: "POST",
        contentType: "application/json",
        data: JSON.stringify({"source": self.source,
               "destination": self.destination,
               "desired_links": self.desired_links,
               "undesired_links": self.undesired_links
               }),

        url: this.$kytos_server_api + "kytos/pathfinder/v2",
        success: function(data) {
            if (data['paths'][0] !== undefined){
                self.paths = data['paths'][0].hops;
            } else {
                self.paths = []
            }
          self.show();
        }
      });

    },
    get_select(){
      var self = this
      $.ajax({
        async: true,
        dataType: "json",
        url: this.$kytos_server_api + "kytos/topology/v3",

        success: function(data) {
          self.switches = data['topology']['switches']
          self.links = data['topology']['links']
        }
      });

    },
    show() {
       var content = {
                      "component": 'kytos-pathfinder-k-info-panel-best_path',
                      "content": this.paths,
                      "icon": "compass",
                      "title": "Best Path",
                      "subtitle": "by kytos/pathfinder"
                     }
       this.$kytos.$emit("showInfoPanel", content)

   }
  },

  computed: {
    get_interfaces(){
      var interfaces = []
      $.each(this.switches, function(key, value){
        $.each(value.interfaces, function(key, value){
          interfaces.push({value: key, description: key})
        });
      });

      return interfaces;
    },
    get_links(){
      var links = []
      $.each(this.links, function(key, value){
        links.push({value:value.id, description:value.id});
      });

      return links;
    }
  },

  created(){
    this.get_topology();
  },

  data: function(){
    return {
      paths: [],
      switches: [],
      links: [],
      source: "",
      destination: "",
      desired_links: [],
      undesired_links: []
    }
  }
}
</script>
